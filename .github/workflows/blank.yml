name: Run Private park.sh (quiet, masked, auto-cleanup)

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Target URL (https://...)"
        required: true
      countries:
        description: "EU,AM,... (15 adet; boÅŸsa default)"
        required: false
        default: "EU,AM,EU,AM,EU,AM,EU,AM,EU,AM,EU,AM,EU,AM,EU"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    permissions:
      contents: read

    steps:
      - name: Mask inputs in logs
        run: |
          echo "::add-mask::${{ inputs.url }}"
          echo "::add-mask::${{ inputs.countries }}"
          echo "::add-mask::TARGET_URL=${{ inputs.url }}"
          echo "::add-mask::COUNTRIES=${{ inputs.countries }}"

      - name: Checkout private repo (read-only)
        uses: actions/checkout@v4
        with:
          repository: aynibakbabm/private-repo
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: .priv
          persist-credentials: false

      - name: Preflight (deps & docker sanity)
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y curl
          docker --version

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run park.sh quietly (masked)
        env:
          TARGET_URL: ${{ inputs.url }}
          COUNTRIES: ${{ inputs.countries }}
        shell: bash
        run: |
          set -e
          chmod +x .priv/park.sh || true

          ( set +x; .priv/park.sh > run.log 2>&1 ) &
          pid=$!

          while kill -0 "$pid" 2>/dev/null; do
            echo "running..."
            sleep 300
          done

          wait "$pid" || {
            echo "----- SANITIZED LAST 200 LINES OF run.log -----"
            tail -n 200 run.log \
              | sed -E 's#https?://[^[:space:]]+#[REDACTED_URL]#g' \
              | sed -E 's/([0-9]{1,3}\.){3}[0-9]{1,3}/[REDACTED_IP]/g' \
              | sed -E 's/'"$COUNTRIES"'/[REDACTED_COUNTRIES]/g'
            exit 1
          }

      - name: Secure cleanup (no artifacts)
        if: always()
        run: |
          shred -u run.log || rm -f run.log || true

      - name: Delete logs and workflow run
        if: always()
        run: |
          echo "Deleting logs for run ${{ github.run_id }}"
          curl -s -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/logs"

          echo "Deleting workflow run record ${{ github.run_id }}"
          curl -s -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"
